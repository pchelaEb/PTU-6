create or replace procedure send_trip_alternative(cod_t trips.cod_trip%type, err out number)
as
tickets_number number;
begin
select tickets into tickets_number
from trips
where trips.cod_trip = cod_t;
if tickets_number>0 then
  update trips set tickets = 0
  where trips.cod_trip = cod_t;
  err:=0;
else    
  err:=1;
end if;

end;
/

declare err number;
begin
	send_trip_alternative(2,err);
	dbms_output.put_line('err=' || err);
end;

select * from trips where cod_trip=2;





create or replace trigger trig1 after update on trips for each row
begin
	if:new.tickets=0 then
	if:old.tickets=0 then raise_application_error(-20000,'На рейс не продано ни одного билета');
	else
		  insert into sent_trips (id_trip, cod_trip, cod_route, cod_bus, cod_model, hour, minute, week_day, sent_day, fill_bus, tickets)
  select   sent_trips_seq.nextval,  :old.cod_trip, :old.cod_route, :old.cod_bus, cod_model, :old.hour, :old.minute, :old.week_day, sysdate, :old.tickets/places*100, :old.tickets
  from buses join models using(cod_model);
	end if;
end if;
end;
/

select * from trips where cod_trip=3;

declare err number;
begin
	send_trip_alternative(3,err);
	dbms_output.put_line('err=' || err);
end;




declare err number;
begin
	send_trip_alternative(4,err);
	dbms_output.put_line('err=' || err);
end;



create or replace procedure send_trip_alternative(cod_t trips.cod_trip%type)
as
begin
  update trips set tickets = 0
  where trips.cod_trip = cod_t;
end;
/



begin
	send_trip_alternative(3);
	dbms_output.put_line('***');
end;


select line,text from user_errors;


create or replace trigger insert_bus
after insert on buses
for each row
begin
   insert into a_buses(cod_bus, bus_number, date_begin, date_end) values(:new.cod_bus,:new.bus_number, sysdate,null);
end;

create or replace trigger delete_bus
before delete on buses
for each row
begin
   update a_buses
      set date_end = sysdate
      where a_buses.cod_bus = :old.cod_bus;
end;


select line,text from user_errors;


create or replace trigger place
before insert on models
for each row
begin
	select 42 into :new.places from dual;
end;
